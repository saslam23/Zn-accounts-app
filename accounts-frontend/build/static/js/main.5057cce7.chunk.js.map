{"version":3,"sources":["components/create-transaction.component.js","components/Navbar.component.js","components/transactions-list.component.js","components/create-field.component.js","components/field-list.component.js","components/signup.component.js","components/login.component.js","App.js","index.js"],"names":["Input","props","validate","categoryError","amountError","eventError","state","category","event","includes","amount","setState","onChangeCategory","bind","onChangeEvent","onChangeAmount","onChangeDate","onSubmit","date","Date","events","axios","get","then","response","data","length","map","evnt","e","this","target","value","preventDefault","transaction","console","log","post","res","window","location","localStorage","getItem","className","id","onChange","style","color","fontSize","textAlign","fontWeight","key","type","placeholder","selected","to","Component","Navbar","onSubmitLogout","clear","catch","err","src","alt","onClick","Transaction","substring","href","deleteTransaction","_id","TransactionsList","transactions","error","delete","filter","el","thistransaction","float","headers","label","transactionList","CreateField","fieldChange","required","Field","field","deleteField","FieldList","thisfield","fieldsList","Signup","onChangeEmail","onChangePassword","email","password","credentials","history","push","action","htmlFor","name","Login","errorMessage","isAuthenticated","setItem","Main","withRouter","paddingTop","fontFamily","pathname","path","exact","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5057cce7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default class Input extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    // Because this will we returned as \"undefined\", we bind \"this\" to the handlers within the class component\r\n    this.onChangeCategory = this.onChangeCategory.bind(this);\r\n    this.onChangeEvent = this.onChangeEvent.bind(this);\r\n    this.onChangeAmount = this.onChangeAmount.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this)\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n\r\n    /*Here, we have created our variables by using this.state, and these variables correspond to the field names in our database*/\r\n    this.state = {\r\n      category: '',\r\n      event: '',\r\n      amount: '',\r\n      date: new Date(),\r\n      events: [],\r\n      categoryError: \"\",\r\n      amountError: \"\",\r\n      eventError: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(\"http://localhost:3001/fields/\")\r\n      .then(response =>{\r\n        if (response.data.length > 0) {\r\n          this.setState({\r\n            events: response.data.map(evnt => evnt.event),\r\n            event: response.data[0].event\r\n          })\r\n        }\r\n      })\r\n\r\n      \r\n  }\r\n  \r\n  /**\r\n   * onChange() handler\r\n   * Next, we will add methods which will be used to update our state properties\r\n   * instead of giving a hard coded value to the field, we will use this.setState which will\r\n   * allow us to set the value of the updated field to whatever is inputted from the dropdown menu using e.target.value\r\n   * We do this for all of the fields\r\n   */\r\n\r\n   onChangeCategory(e) {\r\n     this.setState({\r\n       category: e.target.value\r\n     })\r\n\r\n   }\r\n   onChangeEvent(e) {\r\n    this.setState({\r\n      event: e.target.value\r\n    })\r\n\r\n  }\r\n  onChangeAmount(e) {\r\n    this.setState({\r\n      amount: e.target.value\r\n    })\r\n\r\n  }\r\n\r\n  onChangeDate(date){\r\n    this.setState({\r\n      date: date\r\n    })\r\n  }\r\n\r\n/**\r\n * LOGOUT HANDLER\r\n * This is where we will make a request upon submission of the button to delete the session, log out the user\r\n * and redirect them back to the login page.\r\n */\r\n\r\n\r\n/**\r\n * VALIDATION ERRORS\r\n * To validate whether the fields needed to submit the form were entered.\r\n * We started by creating a state that corresponded to the error message that would be received. (i.e. amountError)\r\n * Next, we created a validate function that would be passed and run once the submit handler was run\r\n * In the validate function, error variables with empty strings were created.  Then conditionals were created to check if the input fields had values that were valid for submission\r\n * If not, then we returned the error state and a string with the error message\r\n * The function was \"return true\" if no errors were evident. \r\n */\r\n\r\n  validate= () => {\r\n    let categoryError = \"\";\r\n    let amountError = \"\";\r\n    let eventError = \"\";\r\n\r\n    if(!this.state.category){\r\n      categoryError = \"Please enter a category\";\r\n    }\r\n    if(this.state.event.includes(\"Choose...\")){\r\n      eventError = \"Please enter an event\"\r\n    }\r\n    if(!this.state.amount){\r\n      amountError = \"Please enter an amount\";\r\n    }\r\n    if(categoryError || amountError || eventError){\r\n     this.setState({categoryError, amountError, eventError});\r\n     return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Here, we will create and onSubmit() handler which will take the values from our form and send them over to our database\r\n   */\r\n\r\n\r\n\r\n  \r\n\r\n   onSubmit(e){\r\n     e.preventDefault();\r\n    // Within the handler, values from the fields in the state are stored as a variable called transaction\r\n\r\n    \r\n    const isValid = this.validate();\r\n\r\n    if(isValid){\r\n      const transaction = {\r\n        category: this.state.category,\r\n        event: this.state.event, \r\n        amount: this.state.amount,\r\n        date: this.state.date\r\n      }\r\n \r\n      console.log(transaction);\r\n \r\n      axios.post(\"/transactions/add\", transaction)\r\n       .then(res => console.log(res.data));\r\n      \r\n      window.location = '/list'; // redirects back to home page\r\n    }\r\n     \r\n   };\r\n\r\n   \r\n\r\n  render(){\r\n    const isAuthenticated = window.localStorage.getItem(\"isAuthenticated\");\r\n\r\n    if(!isAuthenticated){\r\n      return <Redirect to=\"/login\"/>\r\n    }\r\n\r\n    return(\r\n    <div>\r\n      <div>\r\n    <form className = \"container\" onSubmit = {this.onSubmit}>\r\n    <div className=\"text-center\" id=\"dropdownMenuButton\">\r\n      <label className=\"label\">Category</label>\r\n      <br></br>\r\n      <br></br>\r\n      <select className=\"custom-select custom-select-md mb-3\" id=\"list\" value = {this.state.category} onChange = {this.onChangeCategory}>\r\n        <option>Choose...</option>\r\n        <option>Vendor</option>\r\n        <option>Sponsor</option>\r\n        <option>Miscellaneous</option>\r\n      \r\n      </select>\r\n      </div>\r\n\r\n      <div style = {{color:\"red\", fontSize: \"14pt\", textAlign:\"center\", fontWeight:\"bold\"}}>\r\n        {this.state.categoryError}\r\n      </div>\r\n\r\n     <div className=\"text-center\" id=\"dropdownMenuButton\">\r\n       <label className=\"label\">Event</label>\r\n       <br></br>\r\n       <br></br>\r\n       <select className=\"custom-select custom-select-md mb-3\" id=\"list\" value = {this.state.event} onChange = {this.onChangeEvent}>\r\n         <option>Choose...</option>\r\n         {this.state.events.map(function(evnt) {\r\n           return <option\r\n           key = {evnt}\r\n           value = {evnt}>{evnt}</option>\r\n         })}\r\n       </select>\r\n       </div>\r\n\r\n       <div style = {{color:\"red\", fontSize: \"14pt\", textAlign:\"center\", fontWeight:\"bold\"}}>\r\n        {this.state.eventError}\r\n      </div>\r\n      \r\n       <div className = \"container text-center\">\r\n        <div className=\"container box\" id=\"dropdownMenuButton\">\r\n    <span className=\"currencyinput\">$ <input \r\n        style={{color: 'red'}} \r\n        className=\"text-center btn\" \r\n        type=\"text\" \r\n        placeholder=\"Amount\" \r\n        value= {this.state.amount} \r\n        onChange = {this.onChangeAmount}  /></span>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{textAlign: \"center\", color:\"red\", fontSize: \"14pt\", fontWeight:\"bold\"}}>\r\n          {this.state.amountError}\r\n      </div>\r\n\r\n      <div className= \"text-center\" id=\"dropdownMenuButton\">\r\n        <br></br>\r\n        <div>\r\n          <DatePicker\r\n          selected = {this.state.date}\r\n          onChange = {this.onChangeDate}/>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n      <div className=\"text-center\">\r\n      <button className=\"btn btn-primary grad\" type=\"submit\">Submit</button>\r\n      </div>\r\n     </form>\r\n    </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Navbar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmitLogout = this.onSubmitLogout.bind(this);\r\n    }\r\n   \r\n\r\n    onSubmitLogout(){\r\n\r\n        axios.get(\"/user/logout\")\r\n        .then(localStorage.clear()\r\n        \r\n        )\r\n        .catch(err => console.log(err))\r\n    \r\n        window.location = '/login';\r\n      }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link to=\"/\" style={{fontSize: \"20pt\"}}className= \"navbar-brand\"><img src={process.env.PUBLIC_URL + \"/assets/zn.png\"} alt=\"Znlogo\" className=\"Znlogo d-block mx-auto\"/></Link>\r\n                <div className=\" navbar-collapse\" id=\"navbarNav\"> \r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/list\" className=\"nav-link\">Entries</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/field\" className =\"nav-link\">Create New Event</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/dropdown\" className =\"nav-link\">Events</Link>\r\n                    </li>\r\n                </ul>\r\n                <button style={{color:\"white\"}}className = \" btn-sm grad\" onClick = {() =>this.onSubmitLogout()}>Logout</button>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { CSVLink} from \"react-csv\";\r\n\r\nconst Transaction = props => {\r\n    return(\r\n    <tr>\r\n        <td>{props.transaction.category}</td>\r\n        <td>{props.transaction.event}</td>\r\n        <td>{props.transaction.amount}</td>\r\n        <td>{props.transaction.date.substring(0,10)}</td>\r\n        <td>\r\n        <button className=\" grad btn-outline-light btn-sm\"  href = \"#\" onClick={() => {props.deleteTransaction(props.transaction._id)}}>delete</button>\r\n        </td>\r\n    </tr>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default class TransactionsList extends Component{ \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.deleteTransaction = this.deleteTransaction.bind(this);\r\n\r\n        this.state = {transactions: []}\r\n    }\r\n\r\n    /**\r\n     * componentDidMount method will cause whatever is in it to be render before anything else.\r\n     * response.data is the code that will retrieve the data from the designated route and that is what we set the state as.\r\n     */\r\n    componentDidMount(){\r\n        axios.get(\"/transactions/\")\r\n            .then( response =>{\r\n                this.setState({transactions: response.data})\r\n                })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n/**\r\n * DELETE TRANSACTION\r\n * We connect to the delete route in the backend and let it run.\r\n * After the specified id has been deleted, we want to re-render the transactions list but updated\r\n * Using the filter, anything _id that does not equal the id in the question for deletion will be rendered.\r\n */\r\n    deleteTransaction(id){\r\n        axios.delete(\"/transactions/\" +id)\r\n        .then(res =>console.log(res.data));\r\n        this.setState({\r\n            transactions:this.state.transactions.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    transactionList(){\r\n        return this.state.transactions.map(thistransaction =>{\r\n            return <Transaction transaction = {thistransaction} deleteTransaction = {this.deleteTransaction} key = {thistransaction._id} />\r\n        })\r\n    }\r\n    render(){\r\n        const headers =[\r\n            {label: \"category\", key: \"category\"},\r\n            {label: \"event\", key: \"event\"},\r\n            {label: \"amount\", key: \"amount\"},\r\n            {label: \"date\", key: \"date\"}\r\n        ]\r\n\r\n        const isAuthenticated = window.localStorage.getItem(\"isAuthenticated\");\r\n\r\n        if(!isAuthenticated){\r\n          return <Redirect to=\"/login\"/>\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                   <br></br>\r\n                <h3 className = \"text-center\">Logged Transactions</h3>\r\n                <table className = \"table table-striped\">\r\n                    <thead className = \"thead-light\">\r\n                        <tr>\r\n                            <th>Category</th>\r\n                            <th>Event</th>\r\n                            <th>Amount</th>\r\n                            <th>Date</th>\r\n                            <th>Action <button style={{float: \"right\"}}className = \" btn-sm grad\">\r\n                                        <CSVLink  style={{color:\"white\"}} data = {this.state.transactions} headers = {headers}> Export </CSVLink>\r\n                                         </button> \r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                         {this.transactionList()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport default class CreateField extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.onChangeEvent = this.onChangeEvent.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            event: ''\r\n        }\r\n    }\r\n\r\n    onChangeEvent(e) {\r\n        this.setState({\r\n            event: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const fieldChange= {\r\n            event: this.state.event \r\n        }\r\n        console.log(fieldChange);\r\n\r\n        axios.post(\"/fields/add\", fieldChange)\r\n            .then(res => console.log(res.data));\r\n\r\n            this.setState({\r\n                event: ''\r\n            })\r\n            \r\n    }\r\n\r\n\r\n    render(){\r\n        const isAuthenticated = window.localStorage.getItem(\"isAuthenticated\");\r\n\r\n        if(!isAuthenticated){\r\n          return <Redirect to=\"/login\"/>\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                <h3 className=\"text-center\">Create Dropdown Options</h3>\r\n                <form className = \"container\" onSubmit = {this.onSubmit} id = \"dropdownMenuButton\" style={{fontSize:\"18pt\"}}>\r\n                <div className=\"form-group\">\r\n                    <label>Enter an Event</label>\r\n                    <input type=\"text\" className=\"form-control\"  required value= {this.state.event} onChange = {this.onChangeEvent}/>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                <button className=\"btn btn-primary grad\" type=\"submit\">Add</button>\r\n                \r\n                 </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Field = props => {\r\n    return(\r\n    <tr>\r\n        <td>{props.field.event}</td>\r\n        <td>\r\n        <button className=\" grad btn-outline-light btn-sm\" href = \"#\" onClick={() => {props.deleteField(props.field._id)}}>delete</button>\r\n        </td>\r\n    </tr>\r\n    )\r\n}\r\n\r\n\r\nexport default class FieldList extends Component{ \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.deleteField= this.deleteField.bind(this);\r\n\r\n        this.state = {\r\n            events: []\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        axios.get(\"/fields/\")\r\n            .then(response =>{\r\n                this.setState({events: response.data})\r\n                })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n    deleteField(id){\r\n        axios.delete(\"/fields/\" +id)\r\n        .then(res =>console.log(res.data));\r\n        this.setState({\r\n                events:this.state.events.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    fieldsList(){\r\n        return this.state.events.map(thisfield =>{\r\n            return <Field field = {thisfield} deleteField = {this.deleteField} key = {thisfield._id} />\r\n        })\r\n    }\r\n    render(){\r\n\r\n        const isAuthenticated = window.localStorage.getItem(\"isAuthenticated\");\r\n\r\n        if(!isAuthenticated){\r\n          return <Redirect to=\"/login\"/>\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                <h3 className = \"text-center\">Dropdown Options</h3>\r\n                <table className = \"table table-striped\">\r\n                    <thead className = \"thead-light\">\r\n                        <tr>\r\n                            <th>Event</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                         {this.fieldsList()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Signup extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state= {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    }\r\nonChangeEmail(e) {\r\n    this.setState({\r\n        email: e.target.value\r\n    })\r\n\r\n}\r\nonChangePassword(e) {\r\nthis.setState({\r\n    password: e.target.value\r\n})\r\n}\r\nonSubmit(e){\r\ne.preventDefault();\r\n\r\nconst credentials ={\r\n    email: this.state.email,\r\n    password: this.state.password\r\n}\r\n\r\naxios.post(\"/user/signup\", credentials)\r\n.then(this.props.history.push(\"/\"));\r\n}\r\nrender() {\r\n    return(\r\n    <div>\r\n    <div>\r\n        <br></br>\r\n\r\n    <div>\r\n        <div className=\"col-sm-6 card container\">\r\n            <div>\r\n                <div className=\"card-body\">\r\n                    <h1>Sign Up</h1>\r\n\r\n                    <form action = \"/signup\" onSubmit = {this.onSubmit}>\r\n                        <div className= \"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"email\" onChange={this.onChangeEmail} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" name = \"password\" onChange={this.onChangePassword} placeholder=\"password\"/>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary grad col-sm-6\"> Sign up! </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n</div>\r\n)\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Redirect, Link} from \"react-router-dom\"\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state= {\r\n            email: '',\r\n            password: '',\r\n            errorMessage: ''\r\n        }\r\n    }\r\nonChangeEmail(e) {\r\n    this.setState({\r\n        email: e.target.value\r\n    })\r\n\r\n}\r\nonChangePassword(e) {\r\nthis.setState({\r\n    password: e.target.value\r\n})\r\n}\r\n\r\n\r\nonSubmit(e){\r\ne.preventDefault();\r\n\r\nconst credentials ={\r\n    email: this.state.email,\r\n    password: this.state.password\r\n}\r\n\r\naxios.post(\"/user/login\", credentials)\r\n.then( response => {\r\n    // Here we are getting the value of isAuthenticated form the server, which is true if username and password are valid\r\n    // and we go through the req.login check in the login route\r\n    const isAuthenticated = response.data.isAuthenticated; \r\n    // Then we go ahead and store this value(of either true or false) to localstorage to be use in the render method\r\n    window.localStorage.setItem(\"isAuthenticated\", isAuthenticated)\r\n    this.props.history.push(\"/\");\r\n})\r\n.catch(error => {\r\n    this.setState({\r\n        errorMessage: \"invalid email or password\"\r\n    })\r\n});\r\n    \r\n}\r\nrender() {\r\n    const isAuthenticated = window.localStorage.getItem(\"isAuthenticated\");\r\n    // This doesn't automatically redirect after login.  This only redirects if after login\r\n    // we attempt to go back to the login page, then we get redirected to the home page.\r\n    if(isAuthenticated){\r\n      return <Redirect to = \"/\"/>\r\n    }\r\n\r\n    return(\r\n\r\n    <div>\r\n        <div>\r\n            <br></br>\r\n\r\n    <div >\r\n        <div className=\"col-sm-6 card container\">\r\n            <div>\r\n                <div className=\"card-body\">\r\n                    <h1>Login</h1>\r\n\r\n                    <form action = \"/login\" onSubmit = {this.onSubmit}>\r\n                        <div className= \"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"email\" value = {this.state.email} onChange={this.onChangeEmail} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" name = \"password\" value={this.state.password} onChange={this.onChangePassword} placeholder=\"password\"/>\r\n\r\n                       <p> {this.state.errorMessage} </p> \r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary grad col-sm-6\">Login</button>\r\n                    </form>\r\n                     <p>Don't have an account? <Link to =\"/signup\">Sign Up!</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n)}}","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, withRouter} from \"react-router-dom\";\n\nimport Input from \"./components/create-transaction.component\";\nimport Navbar from \"./components/Navbar.component\";\nimport TransactionsList from \"./components/transactions-list.component\";\nimport CreateField from \"./components/create-field.component\";\nimport FieldList from \"./components/field-list.component\";\nimport Signup from \"./components/signup.component\";\nimport Login from \"./components/login.component\";\n\nconst Main = withRouter(({ location }) => {\n  return(\n    <div>\n    <div className=\"container\">\n\n    <h1 style={{textAlign:\"center\", paddingTop: \"15px\", fontFamily:\"gothic\", fontWeight: \"bold\"}}>Accounts Receivable</h1>\n\n      {\n        location.pathname !== \"/signup\" &&  location.pathname !== \"/login\" && <Navbar />\n      }\n      <Route path=\"/\" exact component= {Input}/>\n      <Route path=\"/list\" component = {TransactionsList}/>\n      <Route path=\"/field\" component = {CreateField}/>\n      <Route path=\"/dropdown\" component= {FieldList}/>\n      <Route path=\"/signup\" component = {Signup}/>\n      <Route path=\"/login\" component = {Login}/>\n\n    </div>\n    </div>\n  )\n})\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Main/>\n    </Router>\n   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}